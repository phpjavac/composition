import{l as n}from"./app.069b597e.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="usevmodel" tabindex="-1"><a class="header-anchor" href="#usevmodel" aria-hidden="true">#</a> useVModel</h1><p>\u52A8\u6001\u7ED1\u5B9A props emit</p><h2 id="\u57FA\u7840\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u7840\u4F7F\u7528</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useVmodel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@lib&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Choice Img&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> emits <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;exampleEmit&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> exampleOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">eventName</span><span class="token operator">:</span> <span class="token string">&#39;exampleEmit&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">passive</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bindData <span class="token operator">=</span> <span class="token function">useVmodel</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>emit<span class="token punctuation">,</span>exampleOptions<span class="token punctuation">)</span>

bindData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span> <span class="token comment">// emit -&gt; emit(&#39;exampleEmit&#39;, &#39;test)</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> Type</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
<span class="token keyword">type</span> <span class="token class-name">options</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  eventName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// \u4E8B\u4EF6\u540D\u79F0</span>
  passive<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>  <span class="token comment">// \u76D1\u542C\u65B9\u5F0F</span>
  deep<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>    <span class="token comment">// \u6DF1\u5EA6\u76D1\u542C</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useVModel</span><span class="token generic class-name"><span class="token operator">&lt;</span>
  <span class="token constant">O</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span>
  <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">P</span><span class="token punctuation">,</span>
  Name <span class="token keyword">extends</span> <span class="token builtin">string</span>
<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token constant">O</span><span class="token punctuation">,</span>
  key<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>
  emit<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> Name<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> options
<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span>UnwrapRef<span class="token operator">&lt;</span><span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> <span class="token operator">|</span> WritableComputedRef<span class="token operator">&lt;</span><span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,6);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
